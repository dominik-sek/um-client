generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model adres {
  id           Int       @id @default(autoincrement())
  ulica        String?   @db.VarChar(64)
  nr_domu      Int?      @db.SmallInt
  kod_pocztowy Int?
  wojewodztwo  String?   @db.VarChar(64)
  kraj         String?   @db.VarChar(64)
  miasto       String?   @db.VarChar
  kontakt      kontakt[]
}

model album {
  nr_albumu        Int                @default(autoincrement())
  student_id       Int                @id
  osoba            osoba              @relation(fields: [student_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ocena            ocena[]
  student_kierunku student_kierunku[]
}

model kierunek {
  id               Int                @id @default(autoincrement())
  wydzial_id       Int
  nazwa            String?            @db.VarChar
  liczba_semestrow String?            @db.VarChar
  stopien_studiow  Int?               @db.SmallInt
  wydzial          wydzial            @relation(fields: [wydzial_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  przedmiot        przedmiot[]
  student_kierunku student_kierunku[]
}

model kontakt {
  id          Int     @id @default(autoincrement())
  adres_id    Int
  email       String? @db.VarChar(64)
  nr_telefonu Int?
  adres       adres   @relation(fields: [adres_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  osoba       osoba[]
}

model ocena {
  id                      Int       @default(autoincrement())
  przedmiot_id            Int
  przedmiot_prowadzacy_id Int
  data_zaliczenia         DateTime? @db.Date
  album_student_id        Int
  album                   album     @relation(fields: [album_student_id], references: [student_id], onDelete: NoAction, onUpdate: NoAction)
  przedmiot               przedmiot @relation(fields: [przedmiot_id, przedmiot_prowadzacy_id], references: [id, prowadzacy_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id, przedmiot_id])
}

model osoba {
  id             Int         @id @default(autoincrement())
  kontakt_id     Int
  imie           String?     @db.VarChar(64)
  nazwisko       String?     @db.VarChar(64)
  pesel          BigInt?
  data_urodzenia DateTime?   @db.Date
  tytul_naukowy  String?     @db.VarChar
  rola_id        Int
  kontakt        kontakt     @relation(fields: [kontakt_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rola           rola        @relation(fields: [rola_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  album          album?
  przedmiot      przedmiot[]
  uzytkownik     uzytkownik?
}

model przedmiot {
  id            Int      @default(autoincrement())
  prowadzacy_id Int
  kierunek_id   Int
  nazwa         String?  @db.VarChar
  ects          Int?     @db.SmallInt
  nr_semestru   Int?     @db.SmallInt
  typ           String?  @db.VarChar
  kierunek      kierunek @relation(fields: [kierunek_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  osoba         osoba    @relation(fields: [prowadzacy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ocena         ocena[]

  @@id([id, prowadzacy_id])
}

model student_kierunku {
  kierunek_id      Int
  data_rozpoczecia DateTime  @db.Date
  data_zakonczenia DateTime? @db.Date
  album_student_id Int
  album            album     @relation(fields: [album_student_id], references: [student_id], onDelete: NoAction, onUpdate: NoAction)
  kierunek         kierunek  @relation(fields: [kierunek_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([kierunek_id, album_student_id])
}

model uzytkownik {
  osoba_id Int     @id
  login    String? @db.VarChar
  haslo    String? @db.VarChar
  rola_id  Int
  osoba    osoba   @relation(fields: [osoba_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rola     rola    @relation(fields: [rola_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model wydzial {
  id       Int        @id @default(autoincrement())
  nazwa    String?    @db.VarChar
  kierunek kierunek[]
}

model rola {
  id         Int          @id @default(autoincrement())
  nazwa      String
  osoba      osoba[]
  uzytkownik uzytkownik[]
}
